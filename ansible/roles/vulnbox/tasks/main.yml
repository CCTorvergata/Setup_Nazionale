- name: "Create ssh-key"
  openssh_keypair:
    path: "../out/id_rsa_cc"
    type: rsa
    size: 2048
    force: true
  delegate_to: localhost
  run_once: true

- name: Copy ssh key on the vulnbox
  authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', '../out/id_rsa_cc.pub') }}"

- name: Ensure tshark is installed
  apt:
    name: tshark
    state: present
    update_cache: true

- name: Copy sniffer.sh
  copy:
    src: files/sniffer.sh
    dest: /usr/local/sbin/sniffer.sh
    owner: root
    group: root
    mode: '0755'

- name: Copy sniffer.service
  copy:
    src: files/sniffer.service
    dest: /usr/lib/systemd/system/sniffer.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd services
  systemd_service:
    daemon_reload: true

- name: Enable and start sniffer.service
  ansible.builtin.systemd_service:
    name: sniffer.service
    state: started
    enabled: true

- name: Download firegex
  ansible.builtin.git:
    repo: https://github.com/Pwnzer0tt1/firegex
    dest: /root/firegex
    force: true

- name: Generate password for firegex
  ansible.builtin.set_fact:
    password_firegex: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"

- name: Print firegex password on a file
  copy:
    dest: ../out/password_firegex.txt
    content: "{{ password_firegex }}"
    mode: 0o644
  delegate_to: localhost
  run_once: true

- name: Start firegex
  ansible.builtin.command: "python3 start.py start --port 49123 --startup-psw {{ password_firegex }}"
  args:
    chdir: /root/firegex

- name: Download socat-plus
  git:
    repo: https://github.com/CCTorVergata/socat-plus
    dest: /root/socat-plus
    force: true

